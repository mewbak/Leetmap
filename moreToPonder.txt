strtok implementation.

Question: Axis­Aligned Rectangles

http://blog.codingforinterviews.com/

http://www.geeksforgeeks.org/maximum-contiguous-circular-sum/
bst to dll
dll to bst
  conting sort
  bucket sort

rotateMatrix  
raarrangePosNeg
nge
medianOfNSortedArray.cpp
consecutiveArrayElements.cpp
contSubsetGivingPartcularSum.cpp
LargestSubarrayWithEqualNumberOf0sAnd1s.cpp
to know the shorthand of heap sort
pathwithSum (Tree chap)


======================================
std::size_t found = str3.find(str1);
  if (found!=std::string::npos)
    std::cout<< "is rotation : True\n";
  else
    std::cout<< "is rotation : False\n";
======================================
 veryLongINT& operator=(const veryLongINT& obj) {
      I     = obj.I;
      sign  = obj.sign;
      return *this;
    }
===================
   if(i == 0) {
      remain.append(str.begin() + 1, str.end());
    } else {
      remain.append(str.begin(), str.begin() + i);
      remain.append(str.begin()+(i+1), str.end());
    }




//partition  
  int 
partition(int arr[], int start, int end) {
  int low = start;
  int high = end;
  int pivot = arr[start];@NOTE

  while(low < high) {
    while(arr[low] <= pivot && low <= end) {
      low ++;
    }
    while(arr[high] > pivot && high >= 0) {
      high --;
    }

    if(low < high) {
      int temp = arr[low];
      arr[low]  = arr[high];
      arr[high] = temp;
    }
  }
  arr[start] = arr[high]; @NOTE
  arr[high] = pivot;
  return high;
}

int QSort(int arr[], int start, int end, int k) {
  if(start > end) { @NOTE
    return -1;
  }


  srand
